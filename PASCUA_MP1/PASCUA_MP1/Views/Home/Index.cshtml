@model IEnumerable<Employee>;
@{
    


    ViewData["Title"] = "Home Page";
    string FirstName = "Gabriel ";
    string LastName = "Montano ";
    string Email = "gdmontano@ust.edu.ph";



    int atIndex = Email.IndexOf('@');
    string username = Email.Substring(0, atIndex);
    string domain = Email.Substring(atIndex + 1);



    Boolean IsTenured = true;
    double SalaryPerHour = 400;
    double salaryPerDay = 0;
    double salaryPerMonth = 0;


    if (IsTenured == true){
         salaryPerDay = (SalaryPerHour * 8)+500;
         salaryPerMonth = (salaryPerDay * 30)+500;
    }else{
         salaryPerDay = (SalaryPerHour * 8);
         salaryPerMonth = (salaryPerDay * 30);
    }
    
    DateTime birthday = new DateTime(1990, 5, 15); // Replace with the actual birthdate
    DateTime date = DateTime.Now;

    int age = CalculateAge(birthday);
    // Displaying the birthday

    // Function to calculate age based on a birthday
     int CalculateAge(DateTime birthdate)
    {
        DateTime currentDate = DateTime.Now;
        int age = currentDate.Year - birthdate.Year;

        // Check if the birthday has occurred this year already
        if (birthdate.Date > currentDate.AddYears(-age))
        {
            age--; // Decrement age if the birthday hasn't occurred yet this year
        }

        return age;
    }
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <b>
        Hint: get the current date and subtract to birthday to compute the age.<br>
        A. Sample output:
    </b>    <br>
    I'm @FirstName @LastName and I'm  @age yrs. old<br>
    <br> 
 <b>   Hint: use string function to extract the domain and username from email.<br>
        B. Sample output:
    </b>   <br>
    Email: @Email<br>
    Domain: @domain<br>
    Username: @username<br> 
    <br> <br>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Status</th>
                <th scope="col">Daily Salary</th>
                <th scope="col">Monthly Salary</th>
            </tr>
        </thead>
        <tbody>
    
            @if (Model != null)
            {
                foreach (var employee in Model)
                {
                    <tr>
                        <td>@employee.Id</td>
                        <td>@employee.FirstName @employee.LastName</td>
                        <td>@employee.Email</td>
                        <td> @employee.IsTenured</td>
                        <td> @salaryPerDay</td>
                        <td> @salaryPerMonth</td>
              



                    </tr>
                }
            }
            else
            {
                <p>No data available</p>
            }
                
   
        </tbody>
    </table>


    <br>
</div>
